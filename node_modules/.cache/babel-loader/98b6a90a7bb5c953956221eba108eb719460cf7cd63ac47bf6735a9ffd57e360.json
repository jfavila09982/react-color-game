{"ast":null,"code":"var _jsxFileName = \"/home/dev2/dev/front-end-projects/color-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [targetColor, setTargetColor] = useState('');\n  const [message, setMessage] = useState('');\n  const [colors, setColors] = useState([]);\n  useEffect(() => {\n    generateColors();\n    setTargetColor(pickRandomColor());\n  }, []);\n  const generateColors = () => {\n    const newColors = [];\n    for (let i = 0; i < 6; i++) {\n      newColors.push(pickRandomColor());\n    }\n    setColors(newColors);\n  };\n  const pickRandomColor = () => {\n    const randomColor = () => Math.floor(Math.random() * 256);\n    return `rgb(${randomColor()}, ${randomColor()}, ${randomColor()})`;\n  };\n  const handleColorClick = clickedColor => {\n    if (clickedColor === targetColor) {\n      setMessage('Congratulations! You guessed it right!');\n    } else {\n      setMessage('Oops! Try again.');\n    }\n  };\n  const handleNewGame = () => {\n    setMessage('');\n    generateColors();\n    setTargetColor(pickRandomColor());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Color Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"target-color\",\n        style: {\n          backgroundColor: targetColor\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-container\",\n        children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color\",\n          style: {\n            backgroundColor: color\n          },\n          onClick: () => handleColorClick(color)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"X8PsqSYuR4oAUdf9bCUCeMlTOBI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","targetColor","setTargetColor","message","setMessage","colors","setColors","generateColors","pickRandomColor","newColors","i","push","randomColor","Math","floor","random","handleColorClick","clickedColor","handleNewGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","map","color","index","onClick","_c","$RefreshReg$"],"sources":["/home/dev2/dev/front-end-projects/color-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [targetColor, setTargetColor] = useState('');\n  const [message, setMessage] = useState('');\n  const [colors, setColors] = useState([]);\n\n  useEffect(() => {\n    generateColors();\n    setTargetColor(pickRandomColor());\n  }, []);\n\n  const generateColors = () => {\n    const newColors = [];\n    for (let i = 0; i < 6; i++) {\n      newColors.push(pickRandomColor());\n    }\n    setColors(newColors);\n  };\n\n  const pickRandomColor = () => {\n    const randomColor = () => Math.floor(Math.random() * 256);\n    return `rgb(${randomColor()}, ${randomColor()}, ${randomColor()})`;\n  };\n\n  const handleColorClick = (clickedColor) => {\n    if (clickedColor === targetColor) {\n      setMessage('Congratulations! You guessed it right!');\n    } else {\n      setMessage('Oops! Try again.');\n    }\n  };\n\n  const handleNewGame = () => {\n    setMessage('');\n    generateColors();\n    setTargetColor(pickRandomColor());\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Color Game</h1>\n        <div\n          className=\"target-color\"\n          style={{ backgroundColor: targetColor }}\n        ></div>\n        <p>{message}</p>\n        <div className=\"color-container\">\n          {colors.map((color, index) => (\n            <div\n              key={index}\n              className=\"color\"\n              style={{ backgroundColor: color }}\n              onClick={() => handleColorClick(color)}\n            ></div>\n          ))}\n        </div>\n        <button onClick={handleNewGame}>New Game</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
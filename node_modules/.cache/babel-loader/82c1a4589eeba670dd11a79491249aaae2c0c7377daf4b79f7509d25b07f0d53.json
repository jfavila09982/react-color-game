{"ast":null,"code":"var _jsxFileName = \"/home/dev2/dev/game-server/react-color-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [targetColor, setTargetColor] = useState('');\n  const [message, setMessage] = useState('');\n  const [userSelectedColor, setUserSelectedColor] = useState('');\n  const [generatedColors, setGeneratedColors] = useState([]);\n  const [showColors, setShowColors] = useState(false);\n  useEffect(() => {\n    generateColors();\n  }, []);\n  const generateColors = () => {\n    // Simulate a delay before showing the colors\n    setTimeout(() => {\n      setShowColors(true);\n      const newColors = [];\n      for (let i = 0; i < 3; i++) {\n        newColors.push(pickRandomColor());\n      }\n      setGeneratedColors(newColors);\n      setTargetColor(pickRandomColor());\n    }, 1000); // 1-second delay\n  };\n  const pickRandomColor = () => {\n    const colors = ['pink', 'red', 'white', 'green', 'yellow', 'purple', 'blue'];\n    const randomIndex = Math.floor(Math.random() * colors.length);\n    return colors[randomIndex];\n  };\n  const handleColorSelection = color => {\n    setUserSelectedColor(color);\n    checkColorMatch(color);\n  };\n  const checkColorMatch = color => {\n    if (color === targetColor) {\n      setMessage('Congratulations! You guessed it right!');\n    } else {\n      setMessage('Oops! Try again.');\n    }\n  };\n  const handleNewGame = () => {\n    setShowColors(false); // Hide colors before generating new ones\n    setMessage('');\n    setUserSelectedColor('');\n\n    // Introduce a delay before generating new colors\n    setTimeout(() => {\n      generateColors();\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Color Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generate Random Colors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), showColors && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-container\",\n        children: generatedColors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `color ${userSelectedColor === color ? 'selected' : ''}`,\n          style: {\n            backgroundColor: color\n          },\n          onClick: () => handleColorSelection(color)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewGame,\n        children: \"Lets Roll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hNWY1cVdIx0MAALT53eKM3Bnkfw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","targetColor","setTargetColor","message","setMessage","userSelectedColor","setUserSelectedColor","generatedColors","setGeneratedColors","showColors","setShowColors","generateColors","setTimeout","newColors","i","push","pickRandomColor","colors","randomIndex","Math","floor","random","length","handleColorSelection","color","checkColorMatch","handleNewGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["/home/dev2/dev/game-server/react-color-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [targetColor, setTargetColor] = useState('');\n  const [message, setMessage] = useState('');\n  const [userSelectedColor, setUserSelectedColor] = useState('');\n  const [generatedColors, setGeneratedColors] = useState([]);\n  const [showColors, setShowColors] = useState(false);\n\n  useEffect(() => {\n    generateColors();\n  }, []);\n\n  const generateColors = () => {\n    // Simulate a delay before showing the colors\n    setTimeout(() => {\n      setShowColors(true);\n      const newColors = [];\n      for (let i = 0; i < 3; i++) {\n        newColors.push(pickRandomColor());\n      }\n      setGeneratedColors(newColors);\n      setTargetColor(pickRandomColor());\n    }, 1000); // 1-second delay\n  };\n\n  const pickRandomColor = () => {\n    const colors = ['pink', 'red', 'white', 'green', 'yellow', 'purple','blue'];\n    const randomIndex = Math.floor(Math.random() * colors.length);\n    return colors[randomIndex];\n  };\n\n  const handleColorSelection = (color) => {\n    setUserSelectedColor(color);\n    checkColorMatch(color);\n  };\n\n  const checkColorMatch = (color) => {\n    if (color === targetColor) {\n      setMessage('Congratulations! You guessed it right!');\n    } else {\n      setMessage('Oops! Try again.');\n    }\n  };\n\n  const handleNewGame = () => {\n    setShowColors(false); // Hide colors before generating new ones\n    setMessage('');\n    setUserSelectedColor('');\n\n    // Introduce a delay before generating new colors\n    setTimeout(() => {\n      generateColors();\n    }, 1000);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Color Game</h1>\n        <p>Generate Random Colors:</p>\n        {showColors && (\n          <div className=\"color-container\">\n            {generatedColors.map((color, index) => (\n              <div\n                key={index}\n                className={`color ${userSelectedColor === color ? 'selected' : ''}`}\n                style={{ backgroundColor: color }}\n                onClick={() => handleColorSelection(color)}\n              ></div>\n            ))}\n          </div>\n        )}\n        <p>{message}</p>\n        <button onClick={handleNewGame}>Lets Roll</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}